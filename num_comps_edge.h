#ifndef NUM_COMPS_EDGE_H
#define NUM_COMPS_EDGE_H

static int offset10[10][3][4] = 
	{{ {-1,0,0,0},{0,-1,0,1},{0,0,-1,2} },
	{ {1,0,0,0},{0,1,0,1},{0,0,1,2} },
	{ {0,0,0,1},{0,0,0,0},{0,0,0,0} },
	{ {0,0,0,2},{0,0,0,2},{0,0,0,1} },
	{ {0,1,0,1},{1,0,0,0},{0,1,0,1} },
	{ {0,0,1,2},{0,0,1,2},{1,0,0,0} },
	{ {-1,0,0,1},{0,-1,0,0},{0,0,-1,0} },
	{ {-1,0,0,2},{0,-1,0,2},{0,0,-1,1} },
	{ {-1,1,0,1},{1,-1,0,0},{0,1,-1,1} },
	{ {-1,0,1,2},{0,-1,1,2},{1,0,-1,0} }};

static int offset12[32][3][4] = 
	{{ {0,0,0,1},{0,0,0,0},{0,0,0,0} },
	{ {-1,0,0,1},{0,0,0,2},{0,0,0,1} },
	{ {0,1,0,1},{1,0,0,0},{0,1,0,1} },
	{ {-1,1,0,1},{0,0,1,2},{1,0,0,0} },
	{ {0,0,0,2},{0,-1,0,0},{0,0,-1,0} },
	{ {-1,0,0,2},{0,-1,0,2},{0,0,-1,1} },
	{ {0,0,1,2},{1,-1,0,0},{0,1,-1,1} },
	{ {-1,0,1,2},{0,-1,1,2},{1,0,-1,0} },
	{ {0,1,0,0},{1,0,0,1},{1,0,0,2} },
	{ {0,-1,0,0},{-1,0,0,1},{-1,0,0,2} },
	{ {0,0,1,0},{0,0,1,1},{0,1,0,2} },
	{ {0,0,-1,0},{0,0,-1,1},{0,-1,0,2} },
	{ {0,1,1,0},{1,0,1,1},{1,1,0,2} },
	{ {0,1,-1,0},{1,0,-1,1},{1,-1,0,2} },
	{ {0,-1,1,0},{-1,0,1,1},{-1,1,0,2} },
	{ {0,-1,-1,0},{-1,0,-1,1},{-1,-1,0,2} },
	{ {0,0,1,1},{0,0,-1,0},{0,-1,0,0} },
	{ {0,0,-1,1},{0,0,1,0},{0,1,0,0} },
	{ {0,1,1,1},{1,0,-1,0},{1,-1,0,0} },
	{ {0,1,-1,1},{1,0,1,0},{1,1,0,0} },
	{ {-1,0,1,1},{0,-1,-1,0},{0,-1,-1,0} },
	{ {-1,0,-1,1},{0,-1,1,0},{0,1,-1,0} },
	{ {-1,1,1,1},{1,-1,-1,0},{1,-1,-1,0} },
	{ {-1,1,-1,1},{1,-1,1,0},{1,1,-1,0} },
	{ {0,-1,0,2},{-1,0,0,2},{-1,0,0,1} },
	{ {0,1,0,2},{1,0,0,2},{1,0,0,1} },
	{ {0,-1,1,2},{-1,0,1,2},{-1,0,-1,1} },
	{ {0,1,1,2},{1,0,1,2},{1,0,-1,1} },
	{ {-1,-1,0,2},{-1,-1,0,2},{-1,1,0,1} },
	{ {-1,1,0,2},{1,-1,0,2},{1,1,0,1} },
	{ {-1,-1,1,2},{-1,-1,1,2},{-1,1,-1,1} },
	{ {-1,1,1,2},{1,-1,1,2},{1,1,-1,1} }};

// This is now the same as the 12e neighborhood 

static int offset10e[14][3][4] = 
	{{ {-1,0,0,0},{0,-1,0,1},{0,0,-1,2} },
	{ {1,0,0,0},{0,1,0,1},{0,0,1,2} },
	{ {0,0,0,1},{0,0,0,0},{0,0,0,0} },
	{ {0,0,0,2},{0,0,0,2},{0,0,0,1} },
	{ {0,1,0,1},{1,0,0,0},{0,1,0,1} },
	{ {0,0,1,2},{0,0,1,2},{1,0,0,0} },
	{ {-1,0,0,1},{0,-1,0,0},{0,0,-1,0} },
	{ {-1,0,0,2},{0,-1,0,2},{0,0,-1,1} },
	{ {-1,1,0,1},{1,-1,0,0},{0,1,-1,1} },
	{ {-1,0,1,2},{0,-1,1,2},{1,0,-1,0} },
	{ {0,1,0,0},{1,0,0,1},{1,0,0,2} },
	{ {0,-1,0,0},{-1,0,0,1},{-1,0,0,2} },
	{ {0,0,1,0},{0,0,1,1},{0,1,0,2} },
	{ {0,0,-1,0},{0,0,-1,1},{0,-1,0,2} }};

/* This is not actually the 12e neighborhood but rather the 12e union 10e neighborhood */
static int offset12e[34][3][4] = 
	{{ {-1,0,0,0},{0,-1,0,1},{0,0,-1,2} },
	{ {1,0,0,0},{0,1,0,1},{0,0,1,2} },
	{ {0,0,0,1},{0,0,0,0},{0,0,0,0} },
	{ {-1,0,0,1},{0,0,0,2},{0,0,0,1} },
	{ {0,1,0,1},{1,0,0,0},{0,1,0,1} },
	{ {-1,1,0,1},{0,0,1,2},{1,0,0,0} },
	{ {0,0,0,2},{0,-1,0,0},{0,0,-1,0} },
	{ {-1,0,0,2},{0,-1,0,2},{0,0,-1,1} },
	{ {0,0,1,2},{1,-1,0,0},{0,1,-1,1} },
	{ {-1,0,1,2},{0,-1,1,2},{1,0,-1,0} },
	{ {0,1,0,0},{1,0,0,1},{1,0,0,2} },
	{ {0,-1,0,0},{-1,0,0,1},{-1,0,0,2} },
	{ {0,0,1,0},{0,0,1,1},{0,1,0,2} },
	{ {0,0,-1,0},{0,0,-1,1},{0,-1,0,2} },
	{ {0,1,1,0},{1,0,1,1},{1,1,0,2} },
	{ {0,1,-1,0},{1,0,-1,1},{1,-1,0,2} },
	{ {0,-1,1,0},{-1,0,1,1},{-1,1,0,2} },
	{ {0,-1,-1,0},{-1,0,-1,1},{-1,-1,0,2} },
	{ {0,0,1,1},{0,0,-1,0},{0,-1,0,0} },
	{ {0,0,-1,1},{0,0,1,0},{0,1,0,0} },
	{ {0,1,1,1},{1,0,-1,0},{1,-1,0,0} },
	{ {0,1,-1,1},{1,0,1,0},{1,1,0,0} },
	{ {-1,0,1,1},{0,-1,-1,0},{0,-1,-1,0} },
	{ {-1,0,-1,1},{0,-1,1,0},{0,1,-1,0} },
	{ {-1,1,1,1},{1,-1,-1,0},{1,-1,-1,0} },
	{ {-1,1,-1,1},{1,-1,1,0},{1,1,-1,0} },
	{ {0,-1,0,2},{-1,0,0,2},{-1,0,0,1} },
	{ {0,1,0,2},{1,0,0,2},{1,0,0,1} },
	{ {0,-1,1,2},{-1,0,1,2},{-1,0,-1,1} },
	{ {0,1,1,2},{1,0,1,2},{1,0,-1,1} },
	{ {-1,-1,0,2},{-1,-1,0,2},{-1,1,0,1} },
	{ {-1,1,0,2},{1,-1,0,2},{1,1,0,1} },
	{ {-1,-1,1,2},{-1,-1,1,2},{-1,1,-1,1} },
	{ {-1,1,1,2},{1,-1,1,2},{1,1,-1,1} }};

static bool mask10[3][81]=
	{
	{0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 0, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0, 0},
	
	{0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 0, 0, 0, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 1, 0, 0, 0, 0,
	0, 1, 0, 0, 1, 0, 0, 0, 0},
	
	{0, 0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 1, 0, 0, 1, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0}
	};

static bool mask10e[3][81]=
	{
	{0, 0, 0, 0, 1, 0, 0, 0, 0,
	0, 1, 0, 1, 0, 1, 0, 1, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0, 0},
	
	
	{0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 1, 0, 0, 0, 0,
	0, 1, 0, 1, 0, 1, 0, 1, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0,
	
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 1, 0, 0, 0, 0,
	0, 1, 0, 0, 1, 0, 0, 0, 0},
	
	
	{0, 0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 1, 0, 0, 1, 0,
	0, 0, 0, 0, 1, 0, 0, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	
	0, 0, 0, 0, 1, 0, 0, 0, 0,
	0, 1, 0, 1, 0, 1, 0, 1, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 0}
	};
	
static bool mask12[3][81]=
	{
	{0, 1, 0, 0, 1, 0, 0, 1, 0,
	0, 1, 0, 0, 0, 0, 0, 1, 0,
	0, 1, 0, 0, 1, 0, 0, 1, 0,

	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 1, 0},

	{0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,

	0, 0, 0, 1, 1, 1, 0, 0, 0,
	0, 0, 0, 1, 0, 1, 0, 0, 0,
	0, 0, 0, 1, 1, 1, 0, 0, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0, 0},

	{0, 1, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0,

	0, 0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0}
	};

static bool mask12e[3][81]=
	{
	{0, 1, 0, 0, 1, 0, 0, 1, 0,
	0, 1, 0, 0, 0, 0, 0, 1, 0,
	0, 1, 0, 0, 1, 0, 0, 1, 0,

	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 0, 0, 1, 1, 0, 1, 1, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 1, 0},
	
	{0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,
	0, 1, 1, 0, 1, 1, 0, 0, 0,

	0, 0, 0, 1, 1, 1, 0, 0, 0,
	0, 0, 0, 1, 0, 1, 0, 0, 0,
	0, 0, 0, 1, 1, 1, 0, 0, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0, 0},
	
	{0, 1, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0,

	0, 0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0,

	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0, 0}
	};


typedef struct ufType 
{
	int *id;
	int *sz;
	int allocated_length;
	int num_nodes;
	int num_sets;
	int finalized;
}
ufType;

int num_comps_edge(bool *, int *, int, int, bool);

#endif
